<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic | Hugo Academic CV Theme</title>
    <link>http://localhost:1313/tags/academic/</link>
      <atom:link href="http://localhost:1313/tags/academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sun, 27 Apr 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu_645fa481986063ef.png</url>
      <title>Academic</title>
      <link>http://localhost:1313/tags/academic/</link>
    </image>
    
    <item>
      <title>Scientific Languages</title>
      <link>http://localhost:1313/post/post-7/</link>
      <pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post-7/</guid>
      <description>&lt;h2 id=&#34;вводная&#34;&gt;Вводная&lt;/h2&gt;
&lt;p&gt;R или Java — что лучше подходит для анализа больших данных&lt;/p&gt;
&lt;p&gt;Некоторые языки программирования были созданы для обработки больших массивов данных, и вокруг них сложилась целая экосистема из библиотек и фреймворков. Другие языки совсем новые, но работают гораздо быстрее. Вместе с дата-сайентистом и ментором SkillFactory Викторией Тюфяковой разбираемся, в каких случаях лучше использовать R, а в каких — MATLAB и почему Julia может потеснить Python.&lt;/p&gt;
&lt;p&gt;Программирование нужно для всех этапов работы с большими данными, от выгрузки и очистки до проектирования баз данных и точной настройки алгоритмов машинного обучения. Вы можете выбрать любой язык из этого списка, но у каждого из них есть свои особенности и задачи, для которых он лучше подходит. Если это работа с базой данных клиентов для маркетинговой аналитики, подойдут более простые языки, а если серьезное научное исследование — то более сложные и точные.&lt;/p&gt;
&lt;p&gt;Профессия / 24 месяца
Data Scientist
Дата-сайентисты решают поистине амбициозные задачи. Научитесь создавать искусственный интеллект, обучать нейронные сети, менять мир и при этом хорошо зарабатывать. Программа рассчитана на новичков и плавно введет вас в Data Science.&lt;/p&gt;
&lt;p&gt;5 990 ₽/мес&lt;/p&gt;
&lt;p&gt;9 983 ₽/мес
Подробнее
Group 1321314349 (1)
Data Scientist
R — для любителей статистики
Логотип языка R на белом фоне
R был создан для работы со статистикой. Он позволяет собирать и очищать данные, работать с таблицами, проводить статистические тесты, различные виды анализа и составлять графические отчеты. R подойдет для специалистов, знакомых с теорией вероятности, статистическими методами и математическим анализом, поэтому на первый взгляд он может показаться сложным из-за интуитивно непонятного синтаксиса.&lt;/p&gt;
&lt;p&gt;На практике R используют:&lt;/p&gt;
&lt;p&gt;для научных исследований в разных сферах;
машинного обучения и нейросетей;
маркетинговых исследований.
Для R создано более 10 тыс. библиотек и расширений. Например, Ggplot2 — для визуализации данных, Bioconductor — для работы с генетической информацией, а Quanteda — для анализа текстов.&lt;/p&gt;
&lt;p&gt;Кроме этого, R выделяют среди конкурентов высокая скорость обработки данных и открытый исходный код.&lt;/p&gt;
&lt;p&gt;Читайте также
Big Data: что это и где применяется?
Основная проблема при использовании R для больших наборов данных — ограничение в оперативной памяти, которая обеспечивает более быстрый доступ и манипулирование данными, чем при хранении данных на жестких дисках. Если вы готовы пожертвовать производительностью, то можно работать с большими наборами данных в R. Также есть пакеты R, которые помогают при работе с большими данными; я бы рекомендовала обратиться к представлению задач CRAN «Высокопроизводительные и параллельные вычисления с R».&lt;/p&gt;
&lt;p&gt;Python — популярный и понятный
Логотип языка Python на белом фоне
Самый популярный язык программирования в рейтинге TIOBE. В работе с Big Data Python зарекомендовал себя как один из лучших инструментов наравне с R:&lt;/p&gt;
&lt;p&gt;Дата-сайентисты используют язык для работы с машинным обучением и искусственным интеллектом.
Аналитики при помощи библиотек и фреймворков обрабатывают большие массивы данных.
Дата-инженеры с помощью него интегрируют сторонние решения для работы с данными.
Для работы с данными создано несколько специализированных Python-библиотек: NumPy — для вычислений, Pandas — для анализа табличных данных, Matplotlib — для визуализации. В отличие от R, Python кроме обработки и визуализации данных активно используется для разработки сайтов, приложений и других продуктов. Также считается, что это простой язык для новичков, так как у него понятный синтаксис (мы рассказывали, с чего начать учить Python, в этой статье).&lt;/p&gt;
&lt;p&gt;Для анализа больших данных на Python можно использовать PySpark – это библиотека из проекта Apache Spark для анализа больших данных. PySpark предоставляет множество функций для анализа больших данных на Python. Она поставляется с собственной оболочкой, которую вы можете запустить из командной строки».&lt;/p&gt;
&lt;p&gt;Кому и зачем нужен Python, мы писали тут.&lt;/p&gt;
&lt;p&gt;Java — самый универсальный
Логотип языка Java на белом фоне
На Java пишут сайты, разрабатывают ПО и приложения. Это многофункциональный и кроссплатформенный язык, код на котором одинаково работает на мобильных устройствах, консолях или в системе умного дома.&lt;/p&gt;
&lt;p&gt;Он позиционируется как язык №1 в мире, которым пользуется около 9 млн разработчиков. На Java написано множество Big Data инструментов с открытым кодом (например, большая часть экосистемы Hadoop), поэтому разработчики могут на их основе создавать собственные продукты для управления данными. Универсальность — основное преимущество Java в Big Data.&lt;/p&gt;
&lt;p&gt;Java — это высокоэффективный скомпилированный язык, который широко используется для высокопроизводительного кодирования (ETL) и алгоритмов машинного обучения. Вот почему большие данные и Java — большие друзья».&lt;/p&gt;
&lt;p&gt;Кому и зачем нужен Java, мы писали в разборе.&lt;/p&gt;
&lt;p&gt;Scala — самый недооцененный
Логотип языка Scala на белом фоне
Язык Scala не очень популярен у программистов, в рейтинге TIOBE он не входит даже в первую двадцатку. При этом в задачах по обработке данных он гораздо быстрее, чем более популярный Python. Scala способен быстро обрабатывать невероятно большие объемы информации, поэтому его используют Twitter, LinkedIn или Тинькофф.&lt;/p&gt;
&lt;p&gt;На Scala написан фреймворк Apache Spark, важный для машинного обучения и анализа больших данных. Этот фреймворк входит в экосистему Hadoop и позволяет параллельно обрабатывать неструктурированные данные в реальном времени. Он легко взаимодействует с кодом на Java и библиотеками этого языка.&lt;/p&gt;
&lt;p&gt;Scala работает на JVM и у него лучше структуры параллелизма, чем у Java, поскольку Scala обеспечивает лучшую поддержку парадигмы функционального программирования».&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Презентации</title>
      <link>http://localhost:1313/post/post-6/</link>
      <pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post-6/</guid>
      <description>&lt;h2 id=&#34;вводная&#34;&gt;Вводная&lt;/h2&gt;
&lt;p&gt;Привет! Хочу поделиться несколькими советами по созданию эффективных презентаций, которые помогут вам удержать внимание аудитории и донести свои идеи до слушателей.&lt;/p&gt;
&lt;h2 id=&#34;цель-и-структура&#34;&gt;Цель и структура.&lt;/h2&gt;
&lt;p&gt;Структурируйте материал так, чтобы он логично развивался и поддерживал эту цель.&lt;/p&gt;
&lt;h2 id=&#34;чёткие-и-краткие-слайды&#34;&gt;Чёткие и краткие слайды&lt;/h2&gt;
&lt;p&gt;Используйте слайды как средство поддержки вашего выступления, а не как подстрочник. Ключевые фразы и зрительные образы помогут зрителям лучше усвоить информацию.&lt;/p&gt;
&lt;h2 id=&#34;качественные-визуалы&#34;&gt;Качественные визуалы&lt;/h2&gt;
&lt;p&gt;Визуальные элементы, такие как диаграммы, графики и изображения, должны быть качественными и уместными. Они должны подчёркивать и дополнять вашу речь, а не отвлекать внимание.&lt;/p&gt;
&lt;h2 id=&#34;интерактивность&#34;&gt;Интерактивность&lt;/h2&gt;
&lt;p&gt;Включите элементы интерактивности, например, вопросы к аудитории или мини-опросы. Это поможет удержать внимание и сделает вашу презентацию более динамичной.&lt;/p&gt;
&lt;h2 id=&#34;репетиция&#34;&gt;Репетиция.&lt;/h2&gt;
&lt;p&gt;Не забывайте тщательно репетировать вашу презентацию. Это поможет вам чувствовать себя увереннее, а также позволит отточить временные рамки выступления и убедиться, что все технические аспекты работают исправно.&lt;/p&gt;
&lt;h2 id=&#34;саммари&#34;&gt;Саммари&lt;/h2&gt;
&lt;p&gt;И помните, каждая аудитория уникальна. Ваши презентации должны быть адаптированы под интересы и ожидания именно той аудитории, перед которой вы выступаете.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по неделе 22-28 апреля</title>
      <link>http://localhost:1313/post/post-5/</link>
      <pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post-5/</guid>
      <description>&lt;h2 id=&#34;что-было&#34;&gt;Что было&lt;/h2&gt;
&lt;p&gt;На этой неделе не произошло ничего нового. Я учился. Изучал  c++, JavaScript. еще гулял и отдыхал. Ходил в университет.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по неделе 7-12 апреля</title>
      <link>http://localhost:1313/post/post-3/</link>
      <pubDate>Fri, 11 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post-3/</guid>
      <description>&lt;h2 id=&#34;что-было&#34;&gt;Что было&lt;/h2&gt;
&lt;p&gt;На этой неделе не произошло ничего нового. Я учился. Изучал  c++, JavaScript. еще гулял и отдыхал. Ходил в университет.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Пост по неделе 17-21 марта</title>
      <link>http://localhost:1313/post/post1/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post1/</guid>
      <description>&lt;h2 id=&#34;что-было&#34;&gt;Что было&lt;/h2&gt;
&lt;p&gt;На этой неделе не произошло ничего нового. Я учился. Изучал  c++, JavaScript.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Что такое CI/CD</title>
      <link>http://localhost:1313/post/post-2/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/post-2/</guid>
      <description>&lt;h2 id=&#34;краткая-информация&#34;&gt;Краткая информация&lt;/h2&gt;
&lt;p&gt;CI/CD - это способ быстрее и безопаснее создавать программного обеспечения.&lt;/p&gt;
&lt;h2 id=&#34;что-такое-непрерывная-интеграция-ci&#34;&gt;Что такое непрерывная интеграция (CI)?&lt;/h2&gt;
&lt;p&gt;Непрерывная интеграция – это практика разработки программного обеспечения DevOps, при которой разработчики регулярно объединяют изменения программного кода в центральном депозитарии, после чего автоматически выполняется сборка и тестирование. Непрерывная интеграция чаще всего относится к этапу сборки или интеграции в процессе выпуска программного обеспечения и подразумевает как компонент автоматизации (например, CI или сервис сборки), так и культурный компонент (например, обучение частой интеграции). Главная задача непрерывной интеграции – быстрее находить и исправлять ошибки, улучшать качество ПО и сокращать временные затраты на проверку и выпуск новых обновлений ПО.&lt;/p&gt;
&lt;h2 id=&#34;что-такое-непрерывная-доставка-cd&#34;&gt;Что такое непрерывная доставка (CD)?&lt;/h2&gt;
&lt;p&gt;Непрерывная доставка - это шаг дальше. После успешной интеграции кода и его тестирования на CI-сервере, CD-сервер берет этот код и автоматически разворачивает его на серверах, готовых к использованию клиентами. Это означает, что каждый раз, когда программист вносит изменения, эти изменения могут быть автоматически развернуты на серверах без дополнительных ручных действий.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
